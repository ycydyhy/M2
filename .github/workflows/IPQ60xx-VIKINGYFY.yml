#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build-Firmware-IPQ60xx-VIKINGYFY

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ax18_or_m2:
        description: 'ax18_or_m2? (ax18/m2)'
        required: true
        default: 'm2'
      
      only_config:
        description: "only_config?"
        required: false
        default: false
        type: boolean
        
      LAN_IP:
        description: 'Set LAN IP Address'
        required: true
        default: '192.168.1.1'
    
env:
  REPO_URL: https://github.com/VIKINGYFY/immortalwrt
  REPO_BRANCH: main
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config-IPQ60xx.cfg
  DIY_P1_SH: diy-part1-IPQ60xx.sh
  DIY_P2_SH: diy-part2-IPQ60xx.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04

    permissions:
      contents: write
      
    steps:
    
    - name: Show system & Setup
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo
        cat /proc/meminfo
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Checkout
      uses: actions/checkout@main

    - name: ax18_or_m2
      if: contains('ax18.AX18', github.event.inputs.ax18_or_m2)
      run: |
        sed -i "s/CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_zn_m2=y/CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_cmiot_ax18=y/g" config-IPQ60xx.cfg

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    # - name: Free Disk Space
      # if: ${{ github.event.inputs.only_config != 'true' }}
      # uses: jlumbroso/free-disk-space@main
      # with:
        # tool-cache: true
        # android: true
        # dotnet: true
        # haskell: true
        # large-packages: true
        # docker-images: true
        # swap-storage: true
        
    - name: Initialization environment
      if: ${{ github.event.inputs.only_config != 'true' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt -y update --allow-unauthenticated
        sudo -E apt -y full-upgrade
        sudo -E apt -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget
        sudo -E systemctl daemon-reload
        sudo apt-get autoremove -y --purge
        sudo apt-get clean

    # - name: Initialization environment - immortalwrt
      # if: ${{ github.event.inputs.only_config != 'true' }}
      # env:
        # DEBIAN_FRONTEND: noninteractive
      # run: |
        # curl -s https://raw.githubusercontent.com/immortalwrt/build-scripts/master/init_build_environment.sh | sudo bash

    - name: Cache
      if: ${{ github.event.inputs.only_config != 'true' }}
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: 'IPQ60xx-VIKINGYFY'
        prefix: ${{ github.workspace }}/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 设置LAN IP地址（路由器登录地址）
      run: |
        cd openwrt
        SET_IP=${{ github.event.inputs.LAN_IP }}
        if [[ $SET_IP =~ ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
            #修改immortalwrt.lan关联IP
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" $(find feeds/luci/modules/luci-mod-system -type f -name "flash.js")
            #修改默认IP地址
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" package/base-files/files/bin/config_generate
            echo "Set LAN IP Address: $SET_IP"
        else
            echo "Invalid IP address, use default."
        fi

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        make defconfig
        sudo cp .config /FULL_CONFIG_IPQ60xx-VIKINGYFY.cfg
        

    - name: Upload CONFIG
      uses: actions/upload-artifact@main
      with:
        name: FULL_CONFIG_IPQ60xx-VIKINGYFY
        path: /FULL_CONFIG_IPQ60xx-VIKINGYFY.cfg

    - name: Download package
      if: ${{ github.event.inputs.only_config != 'true' }}
      id: package
      run: |
        cd openwrt
        make download -j$(nproc)

    - name: Compile the firmware
      if: ${{ github.event.inputs.only_config != 'true' }}
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        sed -n 's/.*lan) ipad=${ipaddr:-"\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)"} ;;.*/\1/p' package/base-files/files/bin/config_generate | head -n 1 > IP_ADDR
        [ -s IP_ADDR ] && echo "IP_ADDR=$(cat IP_ADDR)" >> $GITHUB_ENV
        
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      run: |
        df -hT

    - name: Copy full config
      if: ${{ github.event.inputs.only_config != 'true' }}
      run: |
        cp /FULL_CONFIG_IPQ60xx-VIKINGYFY.cfg openwrt/bin/targets/*/*/

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && github.event.inputs.only_config != 'true'
      with:
        name: OpenWrt_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}-VIKINGYFY
        path: openwrt/bin
      continue-on-error: true

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled() && github.event.inputs.only_config != 'true'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && github.event.inputs.only_config != 'true'
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}-VIKINGYFY
        path: ${{ env.FIRMWARE }}
      continue-on-error: true

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled() && github.event.inputs.only_config != 'true'
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H.%M")_${{ env.DEVICE_NAME }}-VIKINGYFY" >> $GITHUB_OUTPUT
        touch release.txt
        echo "${{ env.DEVICE_NAME }}-VIKINGYFY firmware" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled() && github.event.inputs.only_config != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
      continue-on-error: true
